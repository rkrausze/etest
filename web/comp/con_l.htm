<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
  <script src="../data/ef_store.js" type="text/javascript">
  </script>
  <script src="../data/ef_restore.js" type="text/javascript">
  </script>
  <script type="text/javascript">
    document.writeln('<sc'+'ript src="../../etest_data.php'+top.location.search+'" type="text/javascript"></sc'+'ript>');
  </script>
  <script src="../data/s2_code.js.php" type="text/javascript">
  </script>
</head>
<body bgcolor="#336699" text="#DDFDF3" style="margin-top:4px; margin-bottom:2px">

<LAYER name="Buttons" top=5 left=5 width="98%">
  study 2000
</LAYER>

</body>

<script type="text/javascript"><!-- Hide script
// study2000, 19.08.2002, TU Dresden, R. KrauÃŸe, Version 0.61 LAYER-VERSION
// http://linus.psych.tu-dresden.de/Stupla/study2000

// display functions ------------------------------------------------

var PlopInShow = 0;
var pmx = "", pmy;
var scrollX = -1;

function HistoryPlop(duration, lastTime, nr, addText, pm)
{
  var sOpen1 = "", sOpen2 = "";
  if ( nr != -1 )
  {
    sOpen1 = '<A href="javascript:SwitchOpen(' + nr + ')" target="control">';
    sOpen2 = '</A>';
  }
  if ( duration > 0 )
  {
    var When = new Date();
    When.setTime(lastTime*1000);
    return sOpen1 + '<IMG src="' + base + '../data/dot1' + pm + '.gif" width="17" height="13" alt="Bearbeitet: ' + Dauer(duration) +
      ', zuletzt ' + When.getHours() + ':' + TN(When.getMinutes()) + ' am ' +
      TN(When.getDate()) + '.' + TN(When.getMonth()+1) + '.' + When.getYear() + addText + '" border=0>\r\n' + sOpen2;
  }
  else
    return sOpen1 + '<IMG src="'+base+'../data/dot2' + pm + '.gif" width="17" height="13" alt="Unbearbeitet" border=0>\r\n' + sOpen2;
}

function ContensEntry(nr, bold, deep, pm, id, sGit)
{
  var s = Name[nr];
  for (var i=0; i < s.length; i++)
    if ( s.charAt(i) == '(' )
    {
      while ( i > 0 && s.charAt(i-1) == ' ' )
        i--;
      s = s.slice(0, i);
      break;
    }
  var size = 3-deep;
  if ( size < 2 )
    size = 2;
  if ( nr == curNr )
    s = '<FONT face="Arial" color="#CC0000" size="' + size + '">'+s+'</FONT>';
  else
    s = '<FONT face="Arial" size="' + size + '">'+s+'</FONT>';
  if ( bold )
    s = '<B>'+s+'</B>';
  // Name
  var s1 = '<TR>';
  for (var j = 0; j < sGit.length; j++)
    s1 += (j ? '>&nbsp;</TD>' : '') + '<TD width=15 background="' + base + '../data/g' + sGit.charAt(j) + '.gif"';
  s1 += ' valign="top">' + (id != "" ? "<ilayer name="+id+"></ilayer>" : "") +
      HistoryPlop(TopicDuration[nr], TopicLast[nr], nr, "", pm + SLP_L(M_TEXT, nr, 0)) +
      '</TD><TD colspan="' + (10-deep) + '" valign="bottom" align="left"><A href="javascript:top.control.SetTopic(' + nr + ')" ' +
      MouseTip(Name[nr]) +'>' +
      s + '</A></TD></TR>\r\n';
  return s1;
}

function ShowCont()
{
  // calculate LastDeep
  for (var i = 0; i <= curNr; i++)
    LastDeep[Deep[i]] = i;
  for (var i = (curNr == -1) ? 0 : Deep[curNr]+1; i <= MAX_DEEP; i++)
    LastDeep[i] = -1;
  // write contens
  if ( !top.data.contens || !top.data.contens.document )
    return;
  LastScrollTop = top.data.contens.pageYOffset;
  var doc = top.data.contens.document;
  doc.open();
  doc.writeln(NO_LINKDEKO,
    '<body bgcolor="#F5F5DC" link="#003366" vlink="#003366">',
    '<LAYER name=Cont top=0 left=4>\r\n',
    '<TABLE cellpadding="1" cellspacing="0" border="0">',
    '<TR>');
  for (var i = 0; i <= 9; i++)
    doc.write('<TD  bgcolor="#FF0000" width="15" height="1"> </TD>');
  doc.writeln('<TD height="1">  </TD></TR>');
  var deep = -1;
  var sGit;
  var LastFlag = false;
  for (var i = 0; i < nTopic; i++)
  {
    var LT = (LastDeep[Deep[i]] == i) ? 1 : 0;
    if ( Deep[i] <= deep + 1 )
    {
      if ( (LT || IsOpen[i]) && i != KeepCurClosed1 )
        deep = Deep[i];
      else if ( Deep[i] <= deep )
        deep = Deep[i]-1;
      var pm = "";
      if ( i+1 < nTopic && Deep[i+1] > Deep[i] )
        pm = ( deep == Deep[i] ) ? "m" : "p";
      if ( Deep[i] == 0 )
        sGit = (pm == "m") ? "3" : "0";
      else
        sGit = sGit.substr(0, Deep[i]-1)+(aLastTopic[i] == 1 ? "1" : "5")+(pm == "m" ? "6" : "2");
      var id = "";
      if ( i == curNr )
      {
        id = 'cur';
        LastFlag = (pm == "m") ? true : false;
      }
      else if ( LastDeep[0] == i )
        id = 'cap';
      else if ( LastFlag && (i == nTopic-1 || Deep[i+1] <= Deep[curNr]) )
      {
        id = 'last';
        LastFlag = false;
      }
      doc.write(ContensEntry(i, LT, Deep[i], pm+(GetTopicHaken(i)? "h" :""), id, sGit));
      sGit1 = "";
      for (var j = 0; j < sGit.length; j++)
        sGit1 += ((1*sGit.charAt(j)) > 2) ? "4" : "0";
      sGit = sGit1;
    }
  }
  doc.writeln('</TABLE></LAYER>\r\n</body>');
  doc.close();
  InView();
  KeepCurClosed2 = KeepCurClosed1;
  KeepCurClosed1 = -1;
}


var LastScrollTop = 0;

function InView()
{
  if ( !top.data.contens )
    return;
  if ( !top.data.contens.document.Cont.document.cur )
    setTimeout("InView()", 1000);
  else
  {
  //  top.data.contens.scrollTo(0, top.data.contens.document.Cont.document.cur.pageY-80);
    var win = top.data.contens;
    var doc = win.document.Cont.document;
    var yCur = doc.cur.pageY -18;
    var yCap = ( doc.cap ) ? doc.cap.pageY -18 : yCur;
    var yLast = ( doc.last ) ? doc.last.pageY+20 : yCur + 20;
    var h = win.innerHeight;
    var p = LastScrollTop;
    if ( yLast - yCap < h )
    {
      if ( p > yCap || p+h < yLast )
        win.scrollTo(0, LastScrollTop = yCap - (h - yLast + yCap) / 2);
      else
        win.scrollTo(0, LastScrollTop = p);
    }
    else if ( yLast - yCur < h )
      if ( p > yCur || p+h < yLast )
        win.scrollTo(0, LastScrollTop = yLast-h+20);
      else
        win.scrollTo(0, LastScrollTop = p);
    else
      win.scrollTo(0, LastScrollTop = yCur);
  }
}

function ShowMat()
{
  if ( !top.data.material  || !top.data.material.document )
    return;
  var doc = top.data.material.document;
  doc.close();
  doc.open();
  doc.writeln(NO_LINKDEKO, '<body bgcolor="#F5F5DC" link="#003366" vlink="#003366">',
  '<LAYER top=4 left=4 name="MatButtons"><TABLE cellpadding= 0 cellspacing=2 border=0>\r\n');
  doc.writeln(
    SecondBookEntry(endTest, M_END, endTest));
  doc.writeln('</TABLE></LAYER>\r\n</BODY>');
  doc.close();
}

function ShowTitle()
{
  while ( !top.data.title );
  var doc = top.data.title.document;
  doc.close();
  doc.open();
  doc.clear();
  doc.writeln('<body bgcolor="#A4C2E0">\r\n',
    '<layer top=4 left=4><table border="0" cellpadding="0" cellspacing="0" width="100%" valign="middle">\r\n',
    '<tr><td valign="middle"><FONT size="4" face="Arial" color="',
    ((Mode % M_MEDIAOPEN) <= M_TEXT) ? '#CC0000' : '#228B22',
    '"><B>',
    TitleText(),
    '</B></FONT></td>\r\n',
    ( !top.data.contens ) ?
      '<td align="right" valign="middle"><font size="3" face="Arial"><B>' + Title + ' &nbsp; </B></font></td>\r\n' : '',
    '<TD width="80px" align="right">',
    '<A href="', base, '../S2_Help/user_doc.htm" target="_blank" >',
    '<img src="', base, '../data/help.gif" width="26" height="25" border=0 alt="Hilfe zu study2000"></A>&nbsp;',
    '<A href="http://www.studierplatz2000.tu-dresden.de/" target="_blank">',
    '<img src="', base, '../data/logo.gif" width="40" height="25" border=0 alt="Zur study2000 Homepage"></A>',
    '</TD>\r\n</TR></TABLE></layer></BODY></HTML>');
  doc.close();
}

function Button(text, action, width, colorStyle, comment)
{
  var Com = comment.split("|");
  var s =
    '<TD bgcolor="' +  ButtonBgColor[colorStyle] + '">' +
      '<SPAN style="border: 3px ' + (colorStyle == 1 ? 'inset ' : 'outset ') + ButtonBgColor[colorStyle] + ';">' +
        '<A href="javascript:' + action + '" target="control" title="' + comment +
          '" style="color:' + ButtonFontColor[colorStyle] + ';font:bold 14px ' +
          ((Com.length < 2) ? "Arial" : Com[1]) + ';text-decoration:none;" ' +
          'onMouseOver="status=\'' + Com[0] + '\'; return true;" ' +
          'onMouseOut="status=\'\'; return true;">&nbsp;' +
          text +
        '&nbsp;</A>' +
      '</SPAN>' +
    '</TD>';
  return s;
}

function GraphicButton(source, action, colorStyle, comment)
{
  var s =  '<TD><A href="javascript:' + action +'"><img src="' + base + '../data/l' +
    source + (colorStyle == 3 ? '_gray' : '') + '.gif" alt="' + comment + '" align="absmiddle" border="0"></A></TD>';
  return s;
}

var ButtonSep =  '<TD>&nbsp;</TD>';

// control functions -----------------------------------------------

function SetTopic(nr, mode)
{
  curNr = nr;
  if ( Mode == M_MATERIAL )
  {
    for (var i = 0; i < top.data.display.document.layers.length; i++)
      if ( top.data.display.document.layers[i].name == "mark" + curNr )
      {
        top.data.display.scrollTo(0, top.data.display.document.layers[i].pageY-80);
        break;
      }
    ShowCont();
  }
  else
  {
    if ( mode )
      Mode = mode;
    SetTopicText(nr);
  }
}

var xd, yd;
function SwitchContMode()
{
  xd = -1;
  ContMode = (ContMode + 1) % 3;
  if ( OnLoading == 1)
  {
    var awin = window.open("", "data");
    var doc = awin.document;
  }
  else
  {
    if ( top.data.display )
    {
      xd = top.data.display.pageXOffset;
      yd = top.data.display.pageYOffset;
    }
    if ( top.data.contens )
      ContWidth = top.data.contens.innerWidth;
    if ( top.data.material )
      MatHeight = top.data.material.document.MatButtons.clip.height + 15;
    var doc = top.data.document;
  }
  doc.open();
  doc.writeln(
    '<HTML>\r\n',
    '<HEAD></HEAD>\r\n');
  if ( ContMode == 0)
    doc.writeln(
      '<frameset cols="', ContWidth, ', *" border="1" bordercolor="#FFFFFF">\r\n',
      '  <frameset rows="40,*,', MatHeight, '" border="0" bordercolor="#F5F5DC">\r\n',
      '     <frame src="' + base + '../data/dummy.htm" name="topic" scrolling=no>\r\n',
      '     <frame src="' + base + '../data/dummy.htm" name="contens">\r\n',
      '     <frame src="' + base + '../data/dummy.htm" name="material">\r\n',
      '  </frameset>\r\n',
      '  <frameset rows="40,*" border="0">\r\n',
      '    <frame src="' + base + '../data/dummy.htm" name="title">\r\n',
      '    <frame src="' + base + '../data/dummy.htm" name="display">\r\n',
      '  </frameset>\r\n',
      '</frameset>\r\n');
  else if ( ContMode == 1 )
    doc.writeln(
      '<frameset cols="*, ', ContWidth, '" border="1" bordercolor="#FFFFFF">\r\n',
      '  <frameset rows="40,*" border="0">\r\n',
      '    <frame src="' + base + '../data/dummy.htm" name="title">\r\n',
      '    <frame src="' + base + '../data/dummy.htm" name="display">\r\n',
      '  </frameset>\r\n',
      '  <frameset rows="40,*,', MatHeight, '" border="0" bordercolor="#F5F5DC">\r\n',
      '    <frame src="' + base + '../data/dummy.htm" name="topic" scrolling=no>\r\n',
      '    <frame src="' + base + '../data/dummy.htm" name="contens">\r\n',
      '    <frame src="' + base + '../data/dummy.htm" name="material">\r\n',
      '  </frameset>\r\n',
      '</frameset>\r\n');
  else
    doc.writeln(
      '  <frameset rows="40,*"  border=0 frameborder=0 framespacing=0>\r\n',
      '    <frame src="' + base + '../data/dummy.htm" name="title">\r\n',
      '    <frame src="' + base + '../data/dummy.htm" name="display">\r\n',
      '  </frameset>\r\n');
  doc.writeln('</HTML>\r\n');
  doc.close();
  if ( OnLoading == 0 )
    Mode %= M_MEDIAOPEN;
  setTimeout("SwitchContModeFinish()", 500);
  if ( OnLoading == 1 )
    OnLoading = 0;
  else
    ShowButtons();
}

function SwitchContModeFinish()
{
  if ( !top.data.display )
  {
    setTimeout("SwitchContModeFinish()", 500);
    return;
  }
  ShowCont();
  ShowTitle();
  ShowDisplay();
  ShowMat();
  // topic
  if ( top.data.topic )
  {
    var doc = top.data.topic.document;
    doc.open();
    doc.writeln(NO_LINKDEKO + '<body bgcolor="#A4C2E0" link="#003366" vlink="#003366" style="margin-top:4px; margin-bottom:4px;">',
     '<A href="javascript:SwitchAllOpen()" target="control" title="Verzeichnis maximieren/minimieren" ',
     'onMouseOver="status=\'Verzeichnis maximieren/minimieren\'; return true;" onMouseOut="status=\'\'; return true;">',
     '<FONT size="3" face="Arial"><NOBR><B>',
      Title, '</B></NOBR></FONT></A>',
     '</BODY>');
    doc.close();
  }
  if ( xd != -1 )
    top.data.display.scrollTo(xd, yd);
  ShowButtons();
}

var LinkCount = 0;

function StartMedia(type, nr, i)
{
  MedMode = type;
  MedTopic = nr;
  MedI = i;
  if ( curNr != nr && M_TEXT <= Mode && Mode < M_TOCMEDIA )
  {
    MedListMode = -1;
    curNr = nr;
    ShowCont();
  }
  var src = GetMedia(type, nr)[i][0];
  if ( (Mode != M_MATERIAL || type != M_EXPERIMENT) && !IsHtml(src) )
  {
    Mode = type+M_MEDIAOPEN;
    if ( !(GetMediaStyle(type) & 2) )
      ShowButtons();
    ShowTitle();
  }
  AddProt("");
  InitProt(Mode, nr, i);
  src = GetMedia(type, nr)[i][0];
  if ( src == "" )
  {
    StartEmptyMedia(type, nr, i);
    return;
  }
  else if ( src.substr(0,2) == "##" )
  {
    var Task = src.substr(2).split("#");
    VisitMedia(Task[0], Task[1], Task[2]);
    return;
  }
  if ( GetMedia(type, nr)[i][0].search(/:/) == -1 )
    src = base + GetMedia(type, nr)[i][0];
  if ( Mode == M_FOLIE+M_MEDIAOPEN && FolieMatch != 0 && IsGraphic(src) )
  {
    var doc = (GetMediaStyle(type) & 2) ? self.open("", GetMediaTitle(type)).document : top.data.display.document;
    var xl = top.data.display.innerWidth;
    var yl = top.data.display.innerHeight;
    doc.open();
    doc.writeln(DISPLAY_HEADER,
      '<img src="', src,
      (FolieMatch % 2 == 1) ? '" width="'+(xl-20) : "",
      (FolieMatch >= 2) ? '" height="'+(yl-20) : "",
      '" style="position:absolute;top:5;left:5;"></body>');
    doc.close();
  }
  else if ( Mode == M_LINK+M_MEDIAOPEN || Mode == M_LINK )
  {
    window.open(src, "link"+(LinkCount++));
  }
  else
    window.open(src, GetMediaStyle(type) & 2 ? GetMediaTitle(type) : "display");
  return false;
}

// service function ----------------------------------------------------------

var sdisplay;

function InsertFonts(s, addFont)
{
  var s2 = s;
  if ( addFont != "" )
  {
    s2 = s2.replace(/X>/g, "X>"+addFont);
    if ( addFont.search(/<SPAN/i) != -1 )
      s2 = s2.replace(/<Y>/g, "</SPAN><Y>");
    else
      s2 = s2.replace(/<Y>/g, "</FONT><Y>");
  }
  return s2;
}


function ExplodeString(s)
{
  s = unescape(s);
  // font-probleme beheben
  var s1 = "";
  var s2 = s;
  var Fonts = new Array();
  var nFonts = 0;
  while ( s2 != "" )
  {
    var i1 = s2.search(/<FONT/i);
    var i2 = s2.search(/<\/FONT/i);
    if ( i1 == -1 )
      i1 = 100000;
    if ( i2 == -1 )
      i2 = 100000;
    var j1 = s2.search(/<SPAN/i);
    var j2 = s2.search(/<\/SPAN/i);
    if ( j1 != -1 && j1 < i1 )
      i1 = j1;
    if ( j2 != -1 && j2 < i2 )
      i2 = j2;
    if ( i1 == 100000 && i2 == 100000 )
    {
      InsertFonts(s2, nFonts > 0 ? Fonts[nFonts-1] : "");
      s1 += s2;
      s2 = "";
      break;
    }
    else if ( i1 < i2 ) // FONT
    {
       s1 += InsertFonts(s2.substr(0, i1), nFonts > 0 ? Fonts[nFonts-1] : "");
       s2 = s2.substr(i1);
       var j = s2.search(/>/)+1;
       Fonts[nFonts++] = s2.substr(0, j);
       s2 = s2.substr(j);
    }
    else if ( i2 < i1 ) // /FONT
    {
       s1 += InsertFonts(s2.substr(0, i2), nFonts > 0 ? Fonts[nFonts-1] : "");
       s2 = s2.substr(i2);
       var j = s2.search(/>/)+1;
       delete Fonts[--nFonts];
       s2 = s2.substr(j);
    }
  }
  s = s1;
  //
  var res = s;
  res = res.replace(/<Y>/g, "</A>");
  res = res.replace(/<X/g, '<A href="javascript:top.control.C(');
  res = res.replace(/X>/g, ')" class="lay">'); //  style="text-decoration:none;color:#000000"
  // insert notes
  for (var i = 0; i < nNotes && Notes[i][0] <= curNr; i++)
    if ( Notes[i][0] == curNr )
    {
      var Name = new RegExp(".control.C\\("+Notes[i][1]+"\\)");
      var j = res.search(Name);
      if ( j == -1 ) continue;
      var s1 = res.slice(j, res.length);
      var j1 = s1.search(/<\/A>/);
      if ( j1 == -1 ) continue;
      res = res.slice(0, j+j1+4) + NoteHTML(i) + res.slice(j+j1+4);
    }
  // insert marks
  for (var i = 0; i < nMarks && Marks[i][0] <= curNr; i++)
    if ( Marks[i][0] == curNr )
    {
      var Name = new RegExp('<A href="javascript:top.control.C\\(' +Marks[i][1] +'\\)');
      var j = res.search(Name);
      if ( j == -1 ) continue;
      res = res.slice(0, j) + '<SPAN style="background-color:' +
      MarkColor[Marks[i][3]] + ';">' + res.slice(j);
      Name = new RegExp('<A href="javascript:top.control.C\\(' +Marks[i][2] +'\\)');
      j = res.search(Name);
      if ( j == -1 ) continue;
      var s1 = res.slice(j, res.length);
      var j1 = s1.search(/<\/A>/);
      if ( j1 == -1 ) continue;
      res = res.slice(0, j+j1+4) + '</SPAN>' + res.slice(j+j1+4);
  }
  // PlopInShow
  if ( PlopInShow == PM_NOTE )
  {
    var Name = new RegExp('<A href="javascript:top.control.C\\(' + NoteNr + '\\)');
    j = res.search(Name);
    var s1 = res.slice(j, res.length);
    var j1 = s1.search(/<\/A>/);
    res = res.slice(0, j+j1+4) + '<img src="' + base + '../data/newnote.gif" alt="Neue Notiz">' + res.slice(j+j1+4);
    PlopInShow = 0;
  }
  if ( PlaneMode == PM_MARK2 )
  {
    var Name = new RegExp('<A href="javascript:top.control.C\\(' + MarkFirst +'\\)');
    var j = res.search(Name);
    if ( j == -1 ) return;
    var res1 = res.slice(0, j) + '<SPAN style="background-color:' +
    MarkColor[curMarkColor] + ';">';
    var res2 = res.slice(j);
    j = res2.search(/<\/A>/);
    if ( j == -1 ) return;
    res = res1 + res2.slice(0, j+4) + '</SPAN>' + res2.slice(j+4);
  }
  res = '<B class="lay" style="line-height:100%"></B>'+res; // Doppelstyle um das Eis zu brechen
  sdisplay = res;
  return res;
}

function PlaneCode()
{
  return '<LAYER name="lplane" top=4 left=4 visibility=hide>plane</LAYER>';
}

// notes ----------------------------------------------------

var NewNotePos;

function Note(nr)
{
  if ( NoteNr != -1 )
    return;
/*  if ( Flight )
    CrashDown(); */
  NoteNr = nr;
  PlopInShow = PM_NOTE;
    if ( curNr == -1 )
      window.open(base + '../data/s2.htm', "display");
    else
      window.open(base + File[curNr] + ".htm", "display");
  NewDia("Notiz",
    '<p><textarea name="NoteText" rows="5" cols="27"></textarea></p>\r\n' +
    '<p><input type="button" onClick="if ( ReturnWin != \'1\' ) ReturnWin.NoteOK();" value="    OK    ">' +
    '<input type="button" onClick="if ( ReturnWin != \'1\' ) ReturnWin.NoteCANCEL();" value="Abbruch"></p>',
    " ",
    280, 190, 200, 200, 0);
}

function NoteOK()
{
  var nr1 = InsertNewNote(new Array(curNr, NoteNr, DiaWin.fm.NoteText.value));
//  DiaWin.close();
  scrollX = top.data.display.pageXOffset;
  scrollY = top.data.display.pageYOffset;
  ShowDisplay();
  top.focus();
  NoteNr = -1;
}

function NoteCANCEL(nr)
{
  ShowDisplay();
  DiaWin.close();
  top.focus();
  NoteNr = -1;
}

function EditNote(nr)
{
  NoteNr = nr;
  PlopInShow = PM_NOTE;
  var Name = new RegExp(".control.EditNote\\("+nr+"\\)");
  var j = sdisplay.search(Name);
  if ( j == -1 ) return;
  var res = sdisplay.slice(j, sdisplay.length);
  var j1 = res.search(/note.gif/);
  if ( j1 == -1 ) return;
  var res = sdisplay.slice(0, j+j1) +
    'new' +
    sdisplay.slice(j+j1);
  var doc = top.data.display.document.TheBody3.document;
  doc.close();
  doc.clear();
  doc.open();
  doc.write(res);
  doc.close();
  NewDia("Notiz bearbeiten",
    '<p><textarea name="NoteText" rows="5" cols="27">'+Notes[nr][2]+'</textarea></p>\r\n' +
    '<P align="right"><input type="button" onClick="ReturnWin.EditNoteOK()" value="    OK    ">' +
    '<input type="button" onClick="if ( ReturnWin != \'1\' ) ReturnWin.EditNoteERASE();" value="Loschen">' +
    '<input type="button" onClick="if ( ReturnWin != \'1\' ) ReturnWin.EditNoteCANCEL();" value="Abbruch"></P>',
    " ",
    280, 190, 200, 200, 0);
}

function EditNoteOK()
{
  Notes[NoteNr][2] = DiaWin.document.forms[0].NoteText.value;
  DiaWin.close();
  ShowDisplay();
  top.focus();
  NoteNr = -1;
}

function EditNoteERASE()
{
  DiaWin.close();
  for (var i = NoteNr; i < nNotes-1; i++)
    Notes[i] = Notes[i+1];
  nNotes--;
  ShowDisplay();
  top.focus();
  NoteNr = -1;
}

function EditNoteCANCEL()
{
  ShowDisplay();
  DiaWin.close();
  top.focus();
  NoteNr = -1;
}

function NoteHTML(nr)
{
  return '<A href="javascript:top.control.EditNote(' + nr + ')">' +
    '<IMG src="' + base + '../data/note.gif" alt="' + Notes[nr][2].replace(/\n/g, " ") + '" border=0>'+
    '</A>';
}

// Markieren ------------------------------------------------------------

function TextMark()
{
  var s = "";
  for (var i = 0; i < 16; i++)
  {
    if ( i % 8 == 0 )
      s += '</TR><TR>';
    s += '<TD bgcolor="' + MarkColor[i] + '">' +
         '<A href="javascript:MarkOK(' + i + ')" target="control" style="text-decoration:none;">' +
         '&nbsp;&nbsp;&nbsp;&nbsp;</A></TD>';
  }
  NewDia("Markierfarbe",
    '<TABLE align="center" border = "2">\r\n' +
    '<TR><TD colspan=8 align="center">Farbe wÃ¤hlen</TD>' +
    s +
    '</TR><TR>' +
    '<TD colspan="8" align="center"><A href="javascript:MarkOK(16)" target="control" style="text-decoration:none;">L&ouml;schen</A></TD>' +
    '</TR></TABLE>',
    "",
    260, 150, 200, 200, -1);
}

function MarkOK(color)
{
  curMarkColor = color;
  TakeOff("Erstes Wort", MarkColor[curMarkColor]);
  top.data.display.defaultStatus = "Klicken sie auf der erste zu markierende Wort."
  DiaWin.close();
  PlaneMode = PM_MARK1;
}

function C(nr)
{
  if ( PlaneMode == PM_MARK1 )
  {
    CrashDown();
    MarkFirst = nr;
    top.data.display.defaultStatus = "Klicken sie nun auf das letzte zu markierende Wort.";
    PlaneText("Letztes Wort");
    PlaneMode = PM_MARK2;
    var pl = top.data.display.document.lplane;
    pmx = pl.left;
    pmy = pl.top;
    scrollX = top.data.display.pageXOffset;
    scrollY = top.data.display.pageYOffset;
    window.open(base + File[curNr] + ".htm", "display");
  }
  else if ( PlaneMode == PM_MARK2 )
  {
    CrashDown();
    InsertNewMark(new Array(curNr, MarkFirst, nr, curMarkColor));
    top.data.display.defaultStatus = "";
    PlaneMode = 0;
    scrollX = top.data.display.pageXOffset;
    scrollY = top.data.display.pageYOffset;
    ShowDisplay();
  }
  else if ( PlaneMode == PM_NOTE )
  {
    CrashDown();
    Note(nr);
  }
}

function TopicHook()
{
  if ( PlaneMode == PM_MARK2 )
    setTimeout('TakeOff("Letztes Wort", MarkColor[curMarkColor])', 100);
  if ( scrollX != -1 )
    setTimeout('top.data.display.scrollTo('+scrollX+', '+scrollY+')', 90);
  scrollX = -1;
}

// aufgabe ---------------------------------------------------------------------------------

function HintWindow(title, text)
{
  NewDia(title,
    '<FONT color="#CC0000"><B>' + title + ':</B></FONT><P>' +
    text +
    '<P align=right>\r\n' +
    '<INPUT type="BUTTON" value="SchlieÃŸen" onClick="self.close()"></P>',
    " ",
    400, 180, 200, 200, -1);
  DiaWin.focus();
}

// plane -----------------------------------------------------------------------------------

function TakeOff(token, col)
{
  PlaneText(token);
  var pl = top.data.display.document.lplane;
  pl.bgColor=col;
  pl.visibility = "show";
  if ( pmx != "" ) {
    pl.left = pmx;
    pl.top = pmy;
    pmx = "";
  }
  //  MovePlane();
  Flight = 1;
  Token = token;
  top.data.display.captureEvents(Event.MOUSEMOVE);
  if ( !top.data.display.lMovePlane )
    alert('no lMove');
  else
    top.data.display.onmousemove=top.data.display.lMovePlane;
}

function PlaneText(s)
{
  var doc = top.data.display.document.lplane.document;
  doc.open();
  doc.clear();
  doc.write('<TABLE border=0 cellpadding=3><TR><TD><FONT face="Arial" size="2"><B>' + s + "</B></FONT></TD></TR></TABLE>");
  doc.close();
}

function CrashDown()
{
  if ( Flight == 1 )
  {
    Flight = 0;
    top.data.display.document.lplane.visibility = "hide";
    top.data.display.onmousemove=0;
    top.data.display.releaseEvents(Event.MOUSEMOVE);
    top.data.display.defaultStatus = "";
    PlaneMode = 0;
  }
}

// Common dialog window ------------------------------------------------------------

var DiaWin;

var DoFocus = -1;

function NewDia(title, body, script, width, height, x, y, doFocus)
{
  var Form =
    '<FONT face="Arial"><FORM name="frm" method="POST">\r\n' +
    body + '\r\n</FORM></FONT>\r\n';
  DiaWin = window.open("", "DiaWin", "resizable=yes,width=" + width + ",height=" + height + ",resizable=yes,screenX=" + x + ",screenY=" + y); //(script == "") ? "width=" + width + ",height=" + height : "resizable=yes,screenX=" + x + ",screenY=" + y);
  var doc = DiaWin.document;
  doc.close();
  doc.open();
  doc.writeln(
    '<HTML><HEAD><TITLE>' + title + '</TITLE>',
    '</HEAD>\r\n',
    DIALOG_HEADER,
      '<LAYER name="dia"">\r\n',
      Form,
      '</LAYER>',
      '</BODY>\r\n',
      '<SC', 'RIPT type="text/javascript">\r\n',
      '  var fm = document.dia.document.frm;\r\n',
      '  var ReturnWin = "1";\r\n',
      (script == "" ) ? "" : '  window.resizeTo(document.dia.clip.width+20, document.dia.clip.height+10);\r\n' +
      '  window.moveTo(20, screen.height-document.dia.clip.height-140);\r\n',
      script,
      '\r\n',
      '</SC', 'RIPT>',
      '</HTML>');
  doc.close();
  DoFocus = doFocus;
  if ( script != "" )
    self.setTimeout('SetDiaReturnWin()', 500);
}

function SetDiaReturnWin()
{
  if ( DiaWin && !DiaWin.closed )
    if ( DiaWin.ReturnWin == "1")
    {
      DiaWin.ReturnWin = top.control;
      if ( DoFocus != -1 )
        DiaWin.document.dia.document.frm.elements[DoFocus].focus();
      else
        DiaWin.focus();
    }
    else
      self.setTimeout('SetDiaReturnWin()', 200);
}

// initialisieren -----------------------------------------------------------------

var base = top.control.location.href;
var l = base.length;
while ( base.charAt(l-1) != '/' && base.charAt(l-1) != '\\' && l > 0 )
{
  base = base.substr(0, l-1);
  l--;
}

var CSS_TEXT =
  '<style type="text/css">\r\n' +
  ' body, p, td, a { font-family:Arial; color:#003366; background-color:#F5F5DC }\r\n' +
  '</style>\r\n';

Init();

// End script hiding --></script>
</html>
